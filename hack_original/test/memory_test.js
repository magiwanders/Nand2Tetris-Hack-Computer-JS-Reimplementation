class Memory_test {
  test(verbose) {
    console.log('***** MEMORY TEST START ******')

    // FUNCTIONALITY TEST
    var memory = new Memory()
    var inn = [
      0b1111111111111111,
      0b1111111111111111,
      0b0010011100001111,
      0b0010011100001111,
      0b0010011100001111,
      0b0010011100001111,
      0b0000100010101110,
      0b0000100010101110,
      0b0010011100001111,
      0b0010011100001111,
      0b0010011100001111,
      0b0010011100001111,
      0b0010011100001111,
      0b0010011100001111,
      0b0010011100001111,
      0b0010011100001111,
      0b0010011100001111,
      0b0010011100001111,
      0b0010011100001111,
      0b0010011100001111,
      0b0010011100001111,
      0b0010011100001111,
      0b0010011100001111,
      0b0010011100001111,
      0b0010011100001111,
      0b0010011100001111,
      0b0000010011010010,
      0b0000010011010010,
      0b0000010011010010,
      0b0000010011010010,
      0b0000100100101001,
      0b0000100100101001,
      0b0000100100101001,
      0b0000100100101001,
      0b0000100100101001,
      0b1111111111111111,
      0b1111111111111111,
      0b1111111111111111,
      0b1111111111111111,
      0b1111111111111111,
      0b1111111111111111,
      0b1111111111111111,
      0b1111111111111111,
      0b1111111111111111,
      0b1111111111111111,
      0b1111111111111111,
      0b1111111111111111,
      0b1111111111111111,
      0b1111111111111111,
      0b1111111111111111,
      0b1111111111111111,
      0b1111111111111111,
      0b1111111111111111
    ]
    var address = [
      0b000000000000000,
      0b000000000000000,
      0b000000000000000,
      0b000000000000000,
      0b010000000000000,
      0b100000000000000,
      0b010000000000000,
      0b010000000000000,
      0b010000000000000,
      0b010000000000000,
      0b000000000000000,
      0b100000000000000,
      0b000000000000001,
      0b000000000000010,
      0b000000000000100,
      0b000000000001000,
      0b000000000010000,
      0b000000000100000,
      0b000000001000000,
      0b000000010000000,
      0b000000100000000,
      0b000001000000000,
      0b000010000000000,
      0b000100000000000,
      0b001000000000000,
      0b010000000000000,
      0b001001000110100,
      0b001001000110100,
      0b010001000110100,
      0b110001000110100,
      0b010001101000101,
      0b010001101000101,
      0b000001101000101,
      0b100001101000101,
      0b110000000000000,
      0b100111111001111,
      0b101000001001111,
      0b000111111001111,
      0b010111111001111,
      0b100111111001110,
      0b100111111001101,
      0b100111111001011,
      0b100111111000111,
      0b100111111011111,
      0b100111111101111,
      0b100111110001111,
      0b100111101001111,
      0b100111011001111,
      0b100110111001111,
      0b100101111001111,
      0b100011111001111,
      0b101111111001111,
      0b110000000000000
    ]
    var load = [
      1, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 0, 0, 0, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
    ]
    var out = [
      0b0000000000000000,
      0b1111111111111111,
      0b1111111111111111,
      0b1111111111111111,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000100010101110,
      0b0000100010101110,
      0b0000100010101110,
      0b1111111111111111,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000100010101110,
      0b0000000000000000,
      0b0000010011010010,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000100100101001,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000001001011,
      0b1111111111111111,
      0b1111111111111111,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000000000000,
      0b0000000001011001
    ]

    var nTests = inn.length

    if (verbose) console.log('*** Functionality Test Start ***')

    var failed=0

    memory.write_word(0b100111111001111, 0b1111111111111111)
    memory.write_word(0b101000001001111, 0b1111111111111111)

    for (var i=0; i<nTests; i++) {
      var outString = 'Memory Test ' + (i+1).toString().padStart(2, '0') + ': '

      if(i==34) memory.write_word(0b110000000000000, 75)
      if(i==52) memory.write_word(0b110000000000000, 89)

      var currentTestResults = memory.out(inn[i], load[i], address[i])

      if (currentTestResults == out[i]) {
        outString += 'Passed'
      } else {
        outString += 'Failed'
        failed++
      }

      //To test only one output
      // if (i==35) {
      //   console.log('in=' + inn[i] + ' load=' + load[i].toString(2) + ' address=' + address[i].toString(2))
      //   console.log('out: obtained ' + currentTestResults +' <=> '+ out[i] + ' expected')
      // }

      if (verbose) console.log(outString)
    }

    console.log('Completed ' + nTests + ' functionality tests of which ' + failed + ' failed.')
    if (verbose) console.log('*** Functionality Test End ***')

    // SPEED TEST
    if (verbose) console.log('*** Speed Test Start ***')

    var repeat = 1000000, timeElapsed=0


    for(var j=0; j<repeat;j++) {
      if(j%100000==0) if (verbose) console.log('[Testing performance...]')
      var a = Math.floor(Math.random() * nTests);
      var b = Math.floor(Math.random() * nTests);
      var c = Math.floor(Math.random() * nTests);
      var start = performance.now()
      memory.out(inn[a], load[b], address[c])
      var end = performance.now()
      timeElapsed+=(end-start)
    }

    var msPerOperation = timeElapsed/repeat

    console.log('The Memory performance is ' + msPerOperation + 'ms/operation.' )
    if (verbose) console.log('*** Speed Test End ***')

    console.log('***** ALU TEST END ******')
  }
}
